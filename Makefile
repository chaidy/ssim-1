#!make
#******************************************************************************
#  Copyright (C) 2005-2007 TU Berlin, Felix Oum, Thomas Richter
#
#  This software is provided 'as-is', without any express or implied
#  warranty.  In no event will the authors be held liable for any damages
#  arising from the use of this software.
#
#  Permission is granted to anyone to use this software for any purpose,
#  including commercial applications, and to alter it and redistribute it
#  freely, subject to the following restrictions:
#
#  1. The origin of this software must not be misrepresented; you must not
#     claim that you wrote the original software. If you use this software
#     in a product, an acknowledgment in the product documentation would be
#     appreciated but is not required.
#  2. Altered source versions must be plainly marked as such, and must not be
#     misrepresented as being the original software.
#  3. This notice may not be removed or altered from any source distribution.
#
#	Felix Oum		Thomas Richter
#				thor@math.tu-berlin.de
#
#******************************************************************************
##
## $Id: Makefile,v 1.18 2017/04/13 14:52:47 thor Exp $
##
## This is the meta-makefile included by all subdirectory
## makefiles. This file here is generated by autoconf, 
##
## *DO NOT EDIT, UNLESS THIS IS makefile.in*
##
## Any modifications should be made at makefile.in or
## Makefile.imco
##
########################################################################
##
## Some compiler settings.
##
CXX	= g++
LD	= g++
CC	= gcc
MAKE	= make --no-print-directory
ECHO	= echo
AR	= ar
ARFLAGS	= -src
##
## $MAKEFILE is set by gmake itself.
##
## Generic options. Be ultra-paranoic here.
##
CFLAGS		= -Wall -W -Wunused -Wpointer-arith -pedantic -Wcast-qual -Wwrite-strings -Wconversion -Wno-long-long -Wredundant-decls -Wnon-virtual-dtor -Woverloaded-virtual -Wsign-promo
##
## Generic linker flags
##
LDFLAGS		=
##
## Additional libraries we need to add here
##
LDLIBS		= -lm
##
##
## Flags for debugging code.
##
DEBUGGER	= -ggdb3 -fno-inline -DDEBUG_LEVEL=2 -DCHECK_LEVEL=3
## Additional libs for debugging (e.g. -lefence)
DBLIBS		=
##
## Flags for optimized code.
##
OPTIMIZER	= -O3 -DDEBUG_LEVEL=0 -DCHECK_LEVEL=0 -ffast-math -funroll-loops -fstrict-aliasing -Wno-redundant-decls -fexpensive-optimizations -fstrength-reduce -fgcse -fcse-follow-jumps -fcse-skip-blocks -frerun-cse-after-loop -frerun-loop-opt -fmove-all-movables -fforce-addr -freduce-all-givs
##-fschedule-insns # These give "register spill" errors.
##-fschedule-insns2 #-fomit-frame-pointer breaks exception hand
##
## Flags for profiling code
##
PROFILER        = -pg -ggdb3 -pg -fno-omit-frame-pointer -fno-inline
## Additional flags for the linker when profiling.
LDPROF          = -pg
##
## Installation specific issues
prefix          = /usr
exec_prefix     = ${prefix}
datadir         = ${prefix}/share
BIN_PATH        = ${exec_prefix}/bin
MAN_PATH        = ${prefix}/share/man
##
########################################################################
##
## Project specific settings start here
##
#######################################################################
##
all		:	config.h final
##
##
## Global settings, distribution, phony targets
##
.PHONY:	all debug profile final install distrib clean realclean %.final %.debug %.profile
##
########################################################################
########################################################################
##
## Subdirectories of this project (to be extended)
## Please edit HERE.
##
DIRS	= cmd global io std img ctrafo ssim vif wavelet
DIST	= ssimdiff
##
########################################################################
########################################################################
## Derived objects from the FILES define
##
INCLUDES	=	$(foreach file,$(FILES),$(file).hpp)    
SOURCES		=	$(foreach file,$(FILES),$(file).cpp)
OBJECTS		=	$(foreach file,$(FILES),$(file).o)
SUBLIBS		=	$(foreach dir,$(DIRS),$(dir)/$(dir).a)
##
#######################################################################
##
## Automatic dependecy checking
##
-include $(OBJECTS:.o=.d) .blank
##
%.d: %.cpp
	@ $(SHELL) -ec '$(CC) $(CFLAGS) -MM $< \
	| sed '\''s/\($*\)\.o[ :]*/\1.o $@ : /g'\'' > $@; \
	[ -s $@ ] || rm -f $@'
##
##
#######################################################################
##
## Compiler invocation rules follow
##
%.o: %.cpp %.hpp
	@ $(ECHO) "Compiling" $*.cpp
	@ $(CXX) $(CFLAGS) $(ADDFLAGS) $*.cpp

%.o: %.cpp
	@ $(ECHO) "Compiling" $*.cpp
	@ $(CXX) $(CFLAGS) $(ADDFLAGS) $*.cpp

%.s: %.cpp %.hpp
	@ $(ECHO) "Compiling" $*.cpp
	@ $(CXX) $(CFLAGS) $(ADDFLAGS) $(OPTIMIZER) $(TOASM) $*.cpp

%.s: %.cpp
	@ $(ECHO) "Compiling" $*.cpp
	@ $(CXX) $(CFLAGS) $(ADDFLAGS) $(OPTIMIZER) $(TOASM) $*.cpp

#######################################################################
##
## autoconf setup rules
config.h.in	:	configure.in
	autoheader
	@ touch config.h.in

configure	:	configure.in config.h.in
	autoconf
	@ touch configure

config.h	:	configure
	./configure
	@ touch config.h

$(MAKEFILE)	:	configure $(MAKEFILE).in
	./configure
	@ touch $(MAKEFILE)
##
##
#######################################################################
##
## Make rules come here
##
all		:	config.h debug


##
## Meta-rule to create something in a sub-directory
##
$(DIRNAME).a	:	$(OBJECTS)
	@ $(AR) $(ARFLAGS) $(DIRNAME).a $(OBJECTS)

###########################################################################
##
## Rules for profile code, fully optimized
##

debug		:	$(foreach dir,$(DIRS),$(dir).debug)
	@ echo "Linking..."
	@ $(LD) -Xlinker --start-group $(SUBLIBS) -Xlinker --end-group -o ssimdiff

%.debug		:
	@ $(MAKE) -C $* debug.sub

debug.sub	:
	@ $(MAKE) $(DIRNAME).a \
	ADDFLAGS="$(DEBUGGER)" ADDLIBS="$(DBLIBS)"

###########################################################################
##
## Rules for profile code, fully optimized
##

profile		:	$(foreach dir,$(DIRS),$(dir).profile)
	@ echo "Linking..."
	@ $(LD) $(LDPROF) -Xlinker --start-group $(SUBLIBS) -Xlinker --end-group -o ssimdiff

%.profile	:
	@ $(MAKE) -C $* profile.sub

profile.sub	:
	@ $(MAKE) $(DIRNAME).a \
	ADDFLAGS="$(OPTIMIZER) $(PROFILER)" ADDLIBS="$(LDPROF)"

###########################################################################
##
## Rules for final code, fully optimized
##

final		:	$(foreach dir,$(DIRS),$(dir).final)
	@ echo "Linking..."
	@ $(LD) -Xlinker --start-group $(SUBLIBS) -Xlinker --end-group -o ssimdiff

%.final		:
	@ $(MAKE) -C $* final.sub

final.sub	:
	@ $(MAKE) $(DIRNAME).a \
	ADDFLAGS="$(OPTIMIZER)" ADDLIBS=""

###########################################################################
##
## Rules for static final code, fully optimized
##

static		:	$(foreach dir,$(DIRS),$(dir).final)
	@ echo "Linking..."
	@ $(LD) -Xlinker --start-group $(SUBLIBS) -Xlinker --end-group -static -o ssimdiff

###########################################################################
##
## Rules for building the distribution
##

distrib		:	clean
	@ echo "Building archive..."
	@ rm -f mssim.tar mssim.tar.gz
	@ make -f Makefile configure
	@ cd .. && tar cf ssim/mssim.tar ssim/configure.in ssim/configure ssim/config.h.in
	@ cd .. && tar rf ssim/mssim.tar ssim/makefile.in ssim/ReadMe ssim/README.Legal
	@ cd .. && find ssim -name "*.cpp" -or -name "*.hpp"     | xargs tar rf ssim/mssim.tar
	@ cd .. && find ssim -name "Makefile" -or -name "ReadMe" | xargs tar rf ssim/mssim.tar
	@ cd .. && find ssim -wholename "ssim/vs10.0/ssim.*" | xargs tar rf ssim/mssim.tar
	@ gzip mssim.tar


install		:	final
	cp ssimdiff ~/bin/wavelet

###########################################################################
##
## Rules for cleaning up
##

clean		:	$(foreach dir,$(DIRS),$(dir).clean)
	@ rm -rf *.dpi ssimdiff gmon.out core *~ *.a
	@ find -name "*.d" | xargs -r rm

%.clean		:
	@ $(MAKE) -C $* clean.sub

clean.sub	:
	@ rm -rf $(OBJECTS) $(OBJECTS:.o=.s) $(OBJECTS:.o=.d) $(OBJECTS:.o=.il)\
	*.dpi core *~ *.a
##
## also clean up the autoconf generated files.
realclean	:	clean
	@ rm -rf configure config.h config.h.in config.log config.status makefile

##
##
#########################################################################
